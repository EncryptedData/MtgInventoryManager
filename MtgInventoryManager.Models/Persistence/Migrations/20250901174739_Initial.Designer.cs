// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MtgInventoryManager.Models.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MtgInventoryManager.Models.Persistence.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250901174739_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArtistAttribution")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CardSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("FlavorText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManaCost")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RulesText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("SetNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CardSetId");

                    b.HasIndex("SetNumber", "Name");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("NumberOfCardsInSet")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SetKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SetKey", "ReleaseDate", "DisplayName");

                    b.ToTable("CardSets");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardSubType", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uuid");

                    b.HasKey("Name");

                    b.HasIndex("CardId");

                    b.ToTable("CardSubTypes");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<Guid?>("CardId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardTypes");

                    b.HasData(
                        new
                        {
                            Id = "Creature"
                        },
                        new
                        {
                            Id = "Artifact"
                        },
                        new
                        {
                            Id = "Instant"
                        },
                        new
                        {
                            Id = "Sorcery"
                        },
                        new
                        {
                            Id = "Enchantment"
                        },
                        new
                        {
                            Id = "Land"
                        },
                        new
                        {
                            Id = "Planeswalker"
                        });
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Inventory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.InventoryItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("CardGrade")
                        .HasColumnType("integer");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("InventoryId");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Card", b =>
                {
                    b.HasOne("MtgInventoryManager.Models.Persistence.CardSet", "CardSet")
                        .WithMany("Cards")
                        .HasForeignKey("CardSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardSet");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardSubType", b =>
                {
                    b.HasOne("MtgInventoryManager.Models.Persistence.Card", null)
                        .WithMany("SubTypes")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardType", b =>
                {
                    b.HasOne("MtgInventoryManager.Models.Persistence.Card", null)
                        .WithMany("CardTypes")
                        .HasForeignKey("CardId");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Inventory", b =>
                {
                    b.HasOne("MtgInventoryManager.Models.Persistence.User", null)
                        .WithMany("Inventories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.InventoryItem", b =>
                {
                    b.HasOne("MtgInventoryManager.Models.Persistence.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MtgInventoryManager.Models.Persistence.Inventory", "Inventory")
                        .WithMany("Items")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Card", b =>
                {
                    b.Navigation("CardTypes");

                    b.Navigation("SubTypes");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.CardSet", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.Inventory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("MtgInventoryManager.Models.Persistence.User", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
